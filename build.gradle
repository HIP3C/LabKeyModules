buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.moowork.gradle:gradle-node-plugin:1.2.0'
    }
}

// Using /LabKeyModules/gradle.properties to override
// when on servers or running from /LabKeyModules instead
// of ~/release19.3
plugins {
    id "com.github.node-gradle.node" version "${gradleNodePluginVersion}" apply false
    id "com.moowork.node" version "${mooworkNodePluginVersion}" apply false
}

// Can use following to download node for consistency environments
// gradleNodePlugin must be applied in plugins to work
// node {
//     /* gradle-node-plugin configuration
//        https://github.com/srs/gradle-node-plugin/blob/master/docs/node.md
//        Task name pattern:
//        ./gradlew npm_<command> Executes an NPM command.
//     */
//     version = "${nodeVersion}"
//     npmVersion = "${npmVersion}"
//     // If true, it will download node using above parameters.
//     // If false, it will try to use globally installed node.
//     download = false
// }

// Allow for local and server builds using flexible basePath
ext.labKeyModulesDir = System.getenv('GRADLE_LKMODS_DIR')
ext.deployDir = System.getenv('GRADLE_DEPLOY_DIR')
ext.externalModulesDir = System.getenv('GRADLE_EXTERNAL_MODULES_DIR')

if (deployDir == null)
    throw new GradleException("deploy directory ${deployDir} does not exist.")

if (externalModulesDir == null)
    throw new GradleException("externalModules directory ${externalModulesDir} does not exist.")

String deploySubProjects = System.getenv("GRADLE_DEPLOY_SUBPROJECTS")
if (deploySubProjects == 'yes'){
    println "Deploying LabKeyModules from repo"
}else{
    println "Deploying LabKeyModules from enlistment server/modules"
}

ext.reactModules = ['DataFinder', 'ResourcesPage']
subprojects {

    if(reactModules.contains(project.name)){
        apply plugin: "com.github.node-gradle.node"
        apply plugin: "com.moowork.node"
    }

    task deploy {
        doLast{ task ->
            println "$task.project.name - deploying to $externalModulesDir"
        }
    }

    task deployFromLKModsRepo{
        if(deploySubProjects == 'yes'){
            dependsOn deploy
        }
    }

}


// Each module has individual build files for speed and ease of deployment
// in */LabKeyModules - gradle :<ModuleName>:deploy