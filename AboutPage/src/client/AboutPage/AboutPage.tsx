import * as React from 'react';

// Styling imports
import './AboutPage.scss';

const AboutPage: React.FC = () => {

    const [divToShow, setDivToShow] = React.useState<string>("About");
    const [subMenuToShow, setSubMenuToShow] = React.useState<string>("gene-expression")

    // --------- ABOUT -----------------
    const About: React.FC = () => { 
        return(
            <div id="About">
                <p>
                    ImmuneSpace blossomed from a shared idea that generating large 
                    amounts collaborative data, cross-center and cross-assay, 
                    to characterize the status of the immune system in diverse 
                    populations under normal conditions and in response to various 
                    stimuli would be a beneficial platform. The Human Immunology 
                    Project Consortium (
                    <a href="https://www.immuneprofiling.org/hipc/page/show?pg=home" target="_blank">HIPC</a>
                    ) program, an organization founded by the 
                    <a href="https://www.niaid.nih.gov/about/dait" target="_blank"> NIAID-DAIT</a>
                    , released ImmuneSpace in January 15, 2016. 
                </p>
                <p>
                    Since its release, ImmuneSpace has developed into powerful 
                    data management and analysis engine, where datasets can be 
                    easily explored and analyzed using state-of-the-art 
                    computational tools. ImmuneSpace takes advantage of the 
                    considerable infrastructure already developed through 
                    another HIPC platform, 
                    <a href="https://immport.niaid.nih.gov" target="_blank"> ImmPort</a>
                    , which serves as a repository 
                    of data generated by investigators funded by DAIT. Data are 
                    submitted by each HIPC center to ImmPort using a set of 
                    standardized data templates. Once ImmPort has made these data 
                    public through routine data releases, the data are transferred 
                    to ImmuneSpace where integrative modeling across various data 
                    types and HIPC centers are enabled.
                </p>
                <p>
                    ImmuneSpace provides multiple ways to interact with, visualize, 
                    and analyze data. Each study contains tabs to view raw data, 
                    run common analyses, and look at custom reports. All the 
                    analyses make use of the R statistical language, leveraging 
                    <a href="http://rforge.net/Rserve/" target="_blank"> Rserve </a> 
                    to improve performance and 
                    <a href="http://yihui.name/knitr/" target="_blank"> knitr </a>
                    to enable full reproducibility. 
                </p>
                <img src="/ResourcesPage/images/dataflow.jpeg"
                    padding-top="80%"
                    width="40%"
                    style={{alignSelf: 'center'}}
                    />
            </div>
        )
    }

    // --------- DataStandards -------------
    const DataStandards: React.FC = () => { 

        const Cytometry: React.FC = () => {
            return(
                <div>
                    <p>
                        Under Construction
                    </p>
                </div>
            )
        }

        const GeneExpression: React.FC = () => {
            return(
                <div>
                   <img src="/AboutPage/images/ge_standardization.png"
                        padding-top="80%"
                        width="65%"/>
                </div>
            )
        }

        const ImmuneResponse: React.FC = () => {
            return(
                <div>
                    <p>
                        Under Construction
                    </p>
                </div>
            )
        }

        return(
            <div id="DataStandards">
                { subMenuToShow == "cytometry" ? <Cytometry/> : null}
                { subMenuToShow == "gene-expression" ? <GeneExpression/> : null}
                { subMenuToShow == "immune-response" ? <ImmuneResponse/> : null}
            </div>
        )
    }

    // --------- NAVBAR -----------------
    // Use bootstrap in Navbar
    const Navbar: React.FC = () => { 
        
        const divInfo = [
            {
                id: "about",
                tag: "About",
                text: "About"
            },
            {
                id: "data-standards",
                tag: "DataStandards",
                text: "Data Standards",
                subMenu: [
                    {
                        tag: "cytometry",
                        text: "Cytometry"
                    },
                    {
                        tag: "gene-expression",
                        text: "Gene Expression"
                    },
                    {
                        tag: "immune-response",
                        text: "Immune Response"
                    }
                ]
            }
        ]

       
        const navBarElements = divInfo.map(function(el){
            const itemId = "navbar-link-" + el.id;
            const href = "#" + el.tag;
    
            if(["DataStandards"].indexOf(el.tag) !== -1){
                var className = "nav-item dropdown" + (divToShow == el.tag ? " active" : "");
                const dropDownId = el.tag + "Dropdown"

                const subMenuHtml = el.subMenu.map(function(subel, i){
                    const tag = "#" + subel.tag
                    return(
                        <li>
                            <a  key={i} 
                                id={subel.tag} 
                                href={tag} 
                                onClick={function(){
                                    setDivToShow(el.tag)
                                    setSubMenuToShow(subel.tag)
                                }}>
                                {subel.text}
                            </a>
                        </li>
                    )
                })

                return(
                    <li id={itemId} className={className}>
                        <a  className="dropdown-toggle" 
                            href={href} 
                            id={dropDownId} 
                            role="button" 
                            data-toggle="dropdown" 
                            aria-haspopup="true" 
                            aria-expanded="false"
                            onClick={function(){
                                const parentNode = document.getElementById(itemId)
                                if(parentNode.className == "nav-item dropdown active"){
                                    parentNode.className = "nav-item dropdown active open"
                                }else if(parentNode.className == "nav-item dropdown active open"){
                                    parentNode.className = "nav-item dropdown active"
                                }
                            }}>
                            {el.text} <span className="caret"></span>
                        </a>
                        <ul className="dropdown-menu">
                            {subMenuHtml}
                        </ul>
                        
                    </li>
                )
            }else{
                const className = divToShow == el.tag ? " active" : "";
                return(
                    <li id = {itemId} className = {className}>
                        <a href = {href} onClick={() => setDivToShow(el.tag)}>
                            {el.text}
                        </a>
                    </li>
                )
            }
        })

        return(
            <nav className="navbar navbar-default" style={{backgroundColor: 'white'}} >
                <div className="container-fluid">
                    <ul className="nav navbar-nav">
                        {navBarElements}
                    </ul>
                </div>
            </nav>
        )
    }

    // return
    return(
        <div>
            <Navbar/>
            { divToShow == "About" ? <About/> : null}
            { divToShow == "DataStandards" ? <DataStandards/> : null}
        </div>
    )
}

export const App: React.FC = () => {

    const filterBanner = document.getElementById('filter-banner')
    filterBanner.style.display = 'none'

    // Must return a React Fragment
    return <AboutPage/>
}