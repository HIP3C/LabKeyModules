// npm build plugins
buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.moowork.gradle:gradle-node-plugin:1.2.0'
    }
}

plugins {
    id "com.github.node-gradle.node" version "2.2.3" apply true
    id "com.moowork.node" version "1.3.1" apply false
}

// download node for consistency across modules
node {
    /* gradle-node-plugin configuration
       https://github.com/srs/gradle-node-plugin/blob/master/docs/node.md
       Task name pattern:
       ./gradlew npm_<command> Executes an NPM command.
    */
    // Version of node to use.
    version = '10.14.1'
    // Version of npm to use.
    npmVersion = '6.4.1'
    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = false
}

// get build/deploy/ directory
//ext.deployDir = System.getenv('DEPLOY_DIR')
ext.labKeyModulesDir = "/Users/evanhenrich/Desktop/FHCRC/LabKeyModules"
ext.deployDir = '/Users/evanhenrich/Desktop/FHCRC/DEPLOY_DIR'
ext.externalModulesDir = "${deployDir}/externalModules/"
ext.reactModules = ['DataFinder', 'ResourcesPage']

if (deployDir == null)
    throw new GradleException("deploy directory ${deployDir} does not exist.")

// Print statement for each module
subprojects {
    if(reactModules.contains(project.name)){
        apply plugin: "com.moowork.node"
    }
    task deploy {
        doLast{ task ->
            println "$task.project.name - deploying"
        }
    }
}

// Each module has individual build files for speed and ease of deployment
// in */LabKeyModules - ./gradlew deploy