String moduleName = "${project.name}"
String moduleBuildDir = "${project.parent.labKeyModulesDir}/${moduleName}"

if(project.parent.reactModules.contains(moduleName)){
    npm_run_build {
        // input files listed are monitored for changes
        // and only rebuilt when needed
        // Note: Cannot use '*' for string matching, so
        // may need to specify different files
        inputs.files fileTree("src")
        inputs.files fileTree("webpack")
        inputs.file "package.json"
        inputs.file "package-lock.json"
        inputs.file "module.properties"
        inputs.file "postcss.config.js"
        inputs.file "tsconfig.json"
        inputs.file "declarations.d.ts"
        
        outputs.dir "resources" // set in where ??
    }

    task zipNpmModule(type: Zip, dependsOn: 'npm_run_build') {
        from "${moduleBuildDir}/resources"
        archiveFileName = "${moduleName}.module"
        destinationDirectory = file("${project.parent.externalModulesDir}")
    }

    deploy {
        dependsOn zipNpmModule
    }

}else if(moduleName == 'extraWebapp'){
    deploy.doLast {
        mkdir "${project.parent.deployDir}/extraWebapp"
        copy {
            from "."
            exclude "*.gradle"
            into "${project.parent.deployDir}/extraWebapp"
        }
    }
    
}else{
    task zipModule(type: Zip)  {
        from "."
        archiveFileName = "${moduleName}.module"
        destinationDirectory = file("${project.parent.externalModulesDir}")
    }
    
    deploy {
        dependsOn zipModule
    }
}